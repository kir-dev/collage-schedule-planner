// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum Status {
  NOT_STARTED
  IN_PROGRESS
  WAITING_FOR_REVIEW
  DONE
}

enum Role {
  ADMIN
  USER
}

model User {
  id             Int            @id @default(autoincrement())
  authSchId      String // Ez majd a belepeshez kell
  email          String         @unique
  username       String         @unique
  profilePicture String?
  groups         GroupMembers[]
  events         Event[]
}

model Group {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  members     GroupMembers[]
  events      Event[]
}

model GroupMembers {
  groupId Int
  userId  Int
  role    Role  @default(USER)
  Group   Group @relation(fields: [groupId], references: [id])
  User    User  @relation(fields: [userId], references: [id])

  @@id([groupId, userId])
}

model Event {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  location     String?
  startDate    DateTime  @default(now()) @db.Date
  endDate      DateTime? @db.Date
  startTime    DateTime? @db.Time
  endTime      DateTime? @db.Time
  priority     Priority  @default(MEDIUM)
  status       Status    @default(NOT_STARTED)
  categoryId   Int
  category     Category  @relation(fields: [categoryId], references: [id])
  ownerUserId  Int?
  ownerUser    User?     @relation(fields: [ownerUserId], references: [id], onDelete: Cascade)
  ownerGroupId Int?
  ownerGroup   Group?    @relation(fields: [ownerGroupId], references: [id], onDelete: Cascade)
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  color       String  @default("#000000")
  description String?
  events      Event[]
}
